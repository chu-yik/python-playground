STAR Stories Cheatsheet

Answer this too - why do you want to join Amazon?
- a lot of great talents in Amazon that i can learn from
- a lot of different tech projects that i could work on
- generally a very exciting opporutnity
- relocation opportunity i have been looking for

why do you want to relocate to Vancouver?
- political issues here in hong kong
    - getting more and more like China unfortunately
- government is disappointing, policies are for the wealthy / china government instead of people
    - housing, medical, transportation 
    - landfill project, railway project, transferring wealth to China government
    - singapore counter example, not exactly democratic but at least it's beneficial to the residents
- heard good things about canada
- feels more livable than the US, and certianly more than HK
- legalising marijuana
- snowy mountains - snowboarding


--- Contech Lab ---

General Background
- with friends and 3rd party share holder (RFID company with various mobile projects)
- work on R&D of BLE (2013 when bluetooth 4.0 application is emerging, Apple iBeacon)
    - Beacon Fish shopper experience
    - POC for carpark in Science Park
    - Phase 3 project for "exhibition", GPS + iBeacon proximity
    - HaiDiLao hotpot shop
- work as contractor for outsourced mobile projects
    - VCity
    - Kakamega (story telling app)

> Indoor position system [Think big]
S: 
    - early 2013, BLE / Bluetooth 4.0 Core Spec Addendum 4, low power, low cost chips powered by coin cell battery
T: 
    - brainstorming products for our start-up as a product to sell
A: 
    - bought prototypes off china online store (As cheap as 5 HKD < 1 USD)
    - place in office and use triangluartion alogorithm to do "coarse" indoor GPS
R: 
    - RSSI signal strength is not reliable, only good for proximity (very close, near by, far away)
    - noticably constructive / destructive interferrence, was good learning 
    - not really good for small space such as office
    - good learning, low cost (only time spent)
    - experience for some future projects

> Haidilao indoor POC [Earn trust, deliver results]
S: 
    - shareholder's friend working for HaiDiLao, big hot pot franchise in China, using some high-tech stuff
    - provide tablet for ordering, want to explore possibility for "in-store navigation" so to save workload of staff
T: 
    - create POC with shop map and on-site demonstration
A:
    - I pointed out it is not good for in-store navigation (experience with our trial in office)
    - shareholder insisted we try anyway
    - figure it might be a good way to meet new connectiong so did it anyway
R:
    - did a free POC for HaiDiLao and there is no follow-up
    - learnt that metallic objects like utensil would further interfere with RSSI reading


> Science Park green path - proximity system [Earn trust, biased for action]
S: 
    - did some POC for science park introducting our capability to do "indoor proximity check"
    - car park POC to "find my car" didn't work out
    - Science park has a new phase opening up and will host an short-term exhibition "renewable energy"
    - want to create a "tour guide" app to introduce the exhibited items like design features and what not
    - asked us to create the app and include proximity checking
T:
    - standalone app for green trail
    - hardware for the beacons to use as identifiers for points of interest
A:
    - created the app
    - used multiple coin cell battery powered in case the beacons run out of power
    - built back-end API for matching UUID with the POIs
R:
    - good that the POIs are far enough away from each other
    - good enough for the exhibition
    - apps taken down after exhibition completed
    - would have used better solution if it is longer term

> Beacon Fish - proximity shopping experience [Earn trust, Think big]
S: 
    - create shopper experience using proximity solution
    - shareholder's friend has a shop in Shanghai, willing to let us film as a POC
T:
    - create business solution as product and find potential users
A:
    - created (3D printed) housing for beacon fish (same chipset)
    - created video and demo app for solution package
    - divide sections of the shop front and know where customers are at
    - shopper "check-in" as a loyalty program
R:
    - not easy to find adoption
    - big franchises are hard to infiltrate due to lack of connection and track record
    - small franchies are skeptical about the solution and were not willing to adopt

> Kakamega child book app -> platform for content creator [Earn trust, Think big]
S:
    - client is composer and want to create app for her story
    - own voice acting and art resources
T:
    - create this "musical" app with the resources given
A:
    - using cocos-2d-x to create parser for XML file "script"
    - enabled us to quickly script out the scenes with animation sequence
    - discussed the possibility of launch the "engine: as an extra product
    - different artist could contribute to the platform
R:
    - created app for the client in short period of time
    - no further request before we end our little start up
    - but personally resuability is indeed a good idea

--- Accedo.tv ---

General Background
- Stockholm based video solution company
- team in HK mostly deal with projects for tailoring solutions for clients
- also "core" team for the mobile SDK
- was in the "core" team
- offered relocation to Stockholm as "core" team is being relocated
- had an offer from Sphero so did not take offer

> VIA Blocks and VIA App
- "Blocks" are the core functionality of the TV app solution
    - basic building blocks like protocols / defintions
    - core services like account system, authentication
    - content service for getting from API and parsing response into MOs
- "App" started as a demo-app that has a baseline UI to demonstrate the functionalities of "Blocks"
    - fetch and display demo contents, TV program guides
    - searching, watch history
    - account login / facebook login
    - being used as a starting point for customisation / tailoring according to customer need

> Watch history feature - animation [customer obsession]
S: 
    - first task in Accedo, start by contributing towards VIA-Blocks and VIA-App
T: 
    - implement watch history feature in both projects
A: 
    - discuss with software achitecture and senior to learn, talk to project team about the feature, etc
R: learnt a lot:
    - separation of concerns, MVC
    - patterns like factory, adapter, delegate
    - refactor for future extensibility
    - creating animation for fun and for betting UI (possible to turn off, w/ project team)
    
> Swift migration experience [learn + curious, biased for action]
S: - Swift 1.0 launched 2014-Sep, looked into the language and think it's great
T: - implementing new feature and decided to incorporate swift (it is bridged to ObjC no problem)
A: - discussed and learn together with senior to decide best practice (tons of workaround like the coming back of struct, no force unwrapping etc)
R: 
    - learning swift syntax and using swift in production 
    - well received and be able to share experience via internal blog 

> Blog for Swift knowledge sharing [develop the best, learn + curious]
S: 
    - Cesar and I were learning and using Swift in our codebase together, thought it'd be good to share with other colleague
T: 
    - Internal blog in Confluence space as a channel for knowledge sharing
A: 
    - Took turn to create blog posts, introducing Swift as an ultimate goal that we should work towards
    - I wrote a good amount of "This week in swift"
    - compilation of Swift related news that caught our attention
    - sometimes there will be best practice / tricks sharing
    - sample project that is a baseline playground for others to test spin
R:
    - not entirely my own credit but Cesar has taught me a very important point
    - while you are teaching / trying to teach others that you could reinforce your own knowledge
    - not about just developing others, but also helping yourself

--- Sphero ---

General Background
- Sphero is a US based, smart toy company, in Boulder, Colorado
- Some well-known products - BB8, R2-D2, Lightning McQueen
- Some less well-known ones are Sphero, Ollie, SPRK
- Smart toys robots, app-enabled
- Products were manufactured in China, a factory in GuangDong called Jetta
- Hong Kong team was initially set up to support manufacturing
- Later the team also do product prototyping and sourcing for new manufacturers
- I was the only software engineer in Hong Kong
- First supporting a collaboration project with Tencent for their version of the Sphero robot
- Then work on maintaining the Test Fixture Softwares
- And also help with any other tasks that involve softwares 
    - app for controlling prototypes
    - build databases and query API for testing dat


> Tencent Project - [Dive deep]
S: 
    - First joined Sphero, Tencent has a collaboration project with Sphero
    - Build a own version of their Sphero, create a game that includes many of the exist Sphero apps
T: 
    - Coordinate between Boulder office and Tencent SZ team, expensive to fly engineers from Boulder to China
    - Boulder team was busy with launch BB-8
A:
    - Looking into the existing apps (unity / native) myself and answering questions that I could answered
R:
    - Successfully concluded the collaboration with limited resources

> Testing Data - [learn + curious]
S: 
    - TF softwares outputting test logs in the form of csv to specific directory
    - are syncrhonized with dropbox directory using good-sync
    - names for computer as directory name
    - a lot of unprocessed data
T: 
    - create query app for internal testing data
A: 
    - began with classifying the data - Firmware upload, PCBA test, Gyro test, FinalBLE, matching station type w/ keyword
    - different keywords identifying the origin of the log and the type - pretty messy but managed to do so
    - script to process the data and parse into DB record
    - broken data due to SW bugs, NoSQL becomes an obvious choice there
    - learnt MongoDB + node.js to write the parser
    - local testing with a few hundreds of files, then set up cron job to process daily, "new" data on DigitalOcean instance
    - trade off between time and space, set up specific indexes for the DB collections to facilitate query and wrtie op
    - quickly mash up some API using express.js
    - create a MVP App that queries my APIs and display daily / weekly testing data by station type / specific station
    - also supports querying a specific MAC address of the product
    - know when this product was loaded, tested and ready for shipping, any abnormal in case of return
R: 
    - As retrospective, not a lot of users for the app, and GM was not providing feedback on the purpose of the App
    - I pointed out that we are getting A LOT less data than we should -> found out connectin problem / configuration error
    - seeing the broken record helps me fix bug in TF SW later
    - iterating on the API and supporting US team to fetch data and answer questions from Customer Support
    - a better backend that the US team was able to fetch data and answer questions regarding manufacturing

> Improve TF software - fix first refactor later [deliver result]
S: 
- TF software was being reused and out of maintainance for a while
- and Nordic chipset has updated (for some reason Sphero decide to use bleeding edge chips without extensive testing)
T: - "fix it" from GM, as they are unreliable for production
A: 
- spent a week sitting together with the FW engineer (who was also responsible for writing the PCBA test)
- find out bug but we are under deadline stress
- make it work
R:
    - hacks and workaround, not pretty but it worked
    - i did go back and refactor, and extract common functionalities to helpers, try to get them to reuse
    - single source to fix, instead of 5 different products
    - extracted common functionality as SDK [ownership, highest standard]

> TF softwares and helpers - feed back from Jetta [customer obsession]
S: 
    - absorbed into TF team and tasked with maintaining the TF
    - chance of learning building with C# so that's ok
T:
    - maintain the TF softwares and improve yield
A:
    - talk to the Jetta line managers to gather feedback
    - focused on low-hanging fruits first (stability first, then speed)
    - built helpers for them to easily and reliablity configuring the stations (scripts executor instead of them typing commands and run scripts)
R:
    - i guess they appreciated it, i hope
    - more and more reliable TF softwares


> Automated computer set up [ownership, invent and simplify]
S:
    - trying to improve test log reliability by utilising central NAS on site
    - configure the computr to connect to SSID to reach the router / NAS
    - new requirement from GM from time to time, for example an indication of network lost
T:
    - set up computer with software and support future maintainability
A:
    - build a updater and a set up installer to configure the computers
    - only need to install once on new computer, then will fetch updated installer and run upon computer start up
    - pings an endpoint for indication that the computer is "online"
R:
    - works and the Jetta IT thanks us for reducing their workload

> Internal product (SPA) week [learn and be curious]
S:
    - Sphero runs Project Accelerator to encourage employee to raise new ideas
T:
    - support HK team product prototyping
A:
    - app for BB-8 with camera head and driving mode with gyro scope
    - app for mini game using a prototype controller
R:
    - good for me to pick up on Apps project again

--- HK01 ---

General Background
- internet company running news content
- app, web and backend
- also trying to include other service like wallet, food ordering service

> general app ownership [ownership, invent and simplify, frugality]
S: 
    - hk01 mobile app, different teams working on it
    - react native with a ton of dependencies, and many forked version of dependencies which leads to messy codebase
T: 
    - as core team, we are to work on features that is not specific team’s task
    - or other teams will hook up to use, for example, notification centre, deferred deep link
A: 
    - refactor existing codebase, added danger.js to check for new dependencies,
    - talk to teams that want to add that and understand why they want to do so, and if there are alternatives
    - also start working on adding unit tests, flow, patch-package instead of forking dependencies
R: 
    - continually improving test coverage and make our lives a little bit easier day by day

> PR review / peer review [develop the best, high standard, earn trust]
S / T:
    - review PR from own team and other teams
    - peer review to give feedback to teammate
A:
    - respectfully give feedback and encourage improvement (code and work)
R:
    - hopefully can improve as a team

> upgrade RN blocker - multiple solution [bias for action, frugality]
S: 
    - upgrading RN, find stale dependencies that are no longer maintained and blocks RN upgrade
T: 
    - either we keep a own copy, or write our own dependencies, or fork and keep a copy
A: 
    - try to find solutions and came across patch-package, as a temp solution before ticketing team has time to handle those dependencies
R: 
    - patch-package works and helps on other dependencies fixing or fine tuning as well
more:  
    - might want to think about alternatives, or removing the dependencies all together as those are really simple packages and we probably were just lazy and didn’t build our own (might not have need to do so

> geolocation permission [right a lot, backbone, bias for action]
S: 
    - we have wrapper to bridge events from web to app, one of them being get location, app used to prompt for location permission but that need to change as we are going to allow 3rd party web to get location from app
T: 
    - think / discuss about proper approach for doing so
A: 
    - suggested to have location permission asked at app start up but go rejected, as UX is not ready for on boarding
    - alternatively suggest to create new event for getting location permission 
    - but after discussion agreed to use the same web view event coz existing implementation of the web will not need to change
R: 
    - it is kind of a tech debt, and there is certainly better appraoch, but i did what can be done at the time

> getstream feeds implementation for notification centre [right a lot, backbone, bias for action, frugality]
S:
    -
T:
    -
A:
    -
R:
    -

> thought experiment - what should leader do [dive deep]
- talk to teammates to understand them as a person, know their aspiration and carreer goals, any opinons and complains
- maintain an open attitude and encourage to talk about problems and how I can help to improve, or the team can learn
- observe and find strength and weakness and help them to improve